{"ast":null,"code":"var _jsxFileName = \"D:\\\\FACULTA\\\\an3\\\\SEM2\\\\DT\\\\Data-Transmission-Project\\\\client\\\\src\\\\pages\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport Layout from '../components/Layout/Layout';\nimport React, { useEffect, useState } from \"react\";\nimport '../styles/Menu.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  let {\n    image,\n    title,\n    description,\n    ingredients = [],\n    price\n  } = _ref;\n  const ingredientsList = ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list-group-item text-white bg-dark\",\n    children: ingredient\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this));\n  async function addToCart(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newCartItem = {\n      title\n    };\n    const response = await fetch(\"http://localhost:5050/record\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newCartItem)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    // Pop-up message\n    const message = await response.text();\n    if (message === \"Already in cart\") window.alert(\"Item is already in the cart!\");else window.alert(\"Item added to cart!\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-white bg-dark\",\n    style: {\n      width: \"18rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      className: \"card-img-top\",\n      style: {\n        width: \"100%\"\n      },\n      alt: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group list-group-flush\",\n      children: ingredientsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: addToCart,\n        children: \"Add to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n_c = Card;\nfunction Row(_ref2) {\n  let {\n    items = []\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: items.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      image: item.image,\n      title: item.title,\n      description: item.description,\n      ingredients: item.ingredients,\n      price: item.price\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n_c2 = Row;\nfunction Body(_ref3) {\n  let {\n    items = []\n  } = _ref3;\n  // This method splits the items into chunks of 5.\n  const splitArray = (arr, chunkSize) => {\n    const chunks = [];\n    for (let i = 0; i < arr.length; i += chunkSize) {\n      const chunk = arr.slice(i, i + chunkSize);\n      chunks.push(chunk);\n    }\n    return chunks;\n  };\n  const splitItems = splitArray(items, 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mycontainer\",\n      children: splitItems.map((chunk, index) => /*#__PURE__*/_jsxDEV(Row, {\n        items: chunk\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n}\n_c3 = Body;\nfunction Menu() {\n  _s();\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const collectionName = \"food\";\n      const response = await fetch(`http://localhost:5050/record?collectionName=${collectionName}`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Body, {\n        items: records\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(Menu, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c4 = Menu;\nexport default Menu;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"Menu\");","map":{"version":3,"names":["Layout","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","_ref","image","title","description","ingredients","price","ingredientsList","map","ingredient","className","children","fileName","_jsxFileName","lineNumber","columnNumber","addToCart","e","preventDefault","newCartItem","response","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","message","text","style","width","src","alt","type","onClick","_c","Row","_ref2","items","item","_id","_c2","Body","_ref3","splitArray","arr","chunkSize","chunks","i","length","chunk","slice","push","splitItems","index","_c3","Menu","_s","records","setRecords","getRecords","collectionName","ok","statusText","json","_c4","$RefreshReg$"],"sources":["D:/FACULTA/an3/SEM2/DT/Data-Transmission-Project/client/src/pages/Menu.js"],"sourcesContent":["import Layout from '../components/Layout/Layout';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../styles/Menu.css';\r\n\r\nfunction Card({ image, title, description, ingredients = [], price }) {\r\n\tconst ingredientsList = ingredients.map((ingredient) => (\r\n\t\t<li className=\"list-group-item text-white bg-dark\">{ingredient}</li>\r\n\t));\r\n\r\n\tasync function addToCart(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\t// When a post request is sent to the create url, we'll add a new record to the database.\r\n\t\tconst newCartItem = { title };\r\n\t\tconst response = await fetch(\"http://localhost:5050/record\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(newCartItem),\r\n\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\twindow.alert(error);\r\n\t\t\t\treturn;\r\n\t\t\t});\r\n\r\n\t\t// Pop-up message\r\n\t\tconst message = await response.text();\r\n\t\tif (message === \"Already in cart\")\r\n\t\t\twindow.alert(\"Item is already in the cart!\");\r\n\t\telse\r\n\t\t\twindow.alert(\"Item added to cart!\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card text-white bg-dark\" style={{ width: \"18rem\" }}>\r\n\t\t\t<img src={image} className=\"card-img-top\" style={{ width: \"100%\" }} alt=\"...\" />\r\n\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<h5 className=\"card-title\">{title}</h5>\r\n\t\t\t\t<p className=\"card-text\">{description}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul className=\"list-group list-group-flush\">\r\n\t\t\t\t{ingredientsList}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<div className=\"card-buttons\">\r\n\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={addToCart}>Add to cart</button>\r\n\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\">{price}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Row({ items = [] }) {\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t{items.map((item) => (\r\n\t\t\t\t<Card\r\n\t\t\t\t\timage={item.image}\r\n\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\tdescription={item.description}\r\n\t\t\t\t\tingredients={item.ingredients}\r\n\t\t\t\t\tprice={item.price}\r\n\t\t\t\t\tkey={item._id} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Body({ items = [] }) {\r\n\t// This method splits the items into chunks of 5.\r\n\tconst splitArray = (arr, chunkSize) => {\r\n\t\tconst chunks = [];\r\n\t\tfor (let i = 0; i < arr.length; i += chunkSize) {\r\n\t\t\tconst chunk = arr.slice(i, i + chunkSize);\r\n\t\t\tchunks.push(chunk);\r\n\t\t}\r\n\t\treturn chunks;\r\n\t};\r\n\tconst splitItems = splitArray(items, 5);\r\n\r\n\treturn (\r\n\t\t<div className=\"box\">\r\n\t\t\t<div className=\"mycontainer\">\r\n\t\t\t\t{splitItems.map((chunk, index) => (\r\n\t\t\t\t\t<Row key={index} items={chunk} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Menu() {\r\n\tconst [records, setRecords] = useState([]);\r\n\r\n\t// This method fetches the records from the database.\r\n\tuseEffect(() => {\r\n\t\tasync function getRecords() {\r\n\t\t\tconst collectionName = \"food\";\r\n\t\t\tconst response = await fetch(`http://localhost:5050/record?collectionName=${collectionName}`);\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tconst message = `An error occurred: ${response.statusText}`;\r\n\t\t\t\twindow.alert(message);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst records = await response.json();\r\n\t\t\tsetRecords(records);\r\n\t\t}\r\n\r\n\t\tgetRecords();\r\n\r\n\t\treturn;\r\n\t}, [records.length]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Layout>\r\n\t\t\t\t<Body items={records} />\r\n\t\t\t</Layout>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}